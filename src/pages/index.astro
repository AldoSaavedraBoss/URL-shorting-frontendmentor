---
import Layout from "../layouts/Layout.astro";
import Cards from "../components/Cards.astro";
import Logo from "../components/Logo.astro";
const key = import.meta.env.URLBAE_LINK;
//import {Image} from 'astro:assets'
---

<Layout title="Frontend Mentor | Shortly URL shortening API Challenge">
	<main class="relative">
		<div class="bg-white px-10 relative">
			<div class="flex font-bold">
				<div class="my-auto">
					<h1 class="text-7xl">More than just shorter links</h1>
					<p class="text-my-gray text-xl font-medium">
						Build your brand’s recognition and get detailed insights
						on how your links are performing.
					</p>
					<button
						class="px-8 py-2.5 mt-8 text-white bg-my-cyan hover:bg-my-cyan-white rounded-full"
						>Get Started</button
					>
				</div>
				<img
					class="-mr-28 xl:mr-0"
					src="./images/illustration-working.svg"
					width={733}
					height={482}
					alt="working illustration"
				/>
			</div>
			<!-- SHORTENING FORM -->
			<div class="w-[800px] bg-white mx-auto translate-y-1/2">
				<form
					class="form-container bg-my-dark-violet p-8 flex w-full h-auto gap-3 justify-center mx-auto rounded-md"
				>
					<input
					id="shortening_btn"
						type="text"
						placeholder="Shorten a link here..."
						class="flex-grow-[8] h-10 pl-4 rounded-md"
					/>
					<button
						class="flex-grow bg-my-cyan hover:bg-my-cyan-white rounded-md text-white"
						>Shorten It!</button
					>
				</form>
			</div>
		</div>

		<div class="pt-20 px-10 pb-32 bg-my-gray-white">
			<div class="w-[800px] mx-auto" id="shorted_links">
    
			</div>
			<div class="mx-auto my-28 w-96 text-center">
				<h2 class="font-bold text-4xl">Advanced Statistics</h2>
				<small class="text-my-gray">
					Track how your links are performing across the web with our
					advanced statistics dashboard.
				</small>
			</div>
			<Cards />
		</div>
	</main>
	<div
		class="w-full text-center h-[200px] bg-my-dark-violet prefooter flex flex-col items-center justify-center text-white"
	>
		<div class="flex flex-col gap-4">
			<h2>Boost your links today</h2>
			<button
				class="bg-my-cyan hover:bg-my-cyan-white px-4 py-2 rounded-3xl"
				>Get Started</button
			>
		</div>
	</div>
	<footer class="flex bg-my-very-dark-blue py-10 text-white">
		<div class="flex-grow basis-0">
			<div class="mx-auto w-fit">
				<Logo color="#fff" />
			</div>
		</div>
		<div class="flex flex-grow-[2] justify-center basis-0 gap-14">
			<div>
				<h6 class="mb-8 text-sm">Features</h6>
				<div class="flex flex-col gap-2">
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Link Shortening</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Branded Links</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Analytics</a
					>
				</div>
			</div>
			<div>
				<h6 class="mb-8 text-sm">Resources</h6>
				<div class="flex flex-col gap-2">
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Blog</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Developers</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Support</a
					>
				</div>
			</div>
			<div>
				<h6 class="mb-8 text-sm">Company</h6>
				<div class="flex flex-col gap-2">
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>About</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Our Team</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Careers</a
					>
					<a href="#" class="text-my-gray hover:text-my-cyan text-xs"
						>Contact</a
					>
				</div>
			</div>
		</div>
		<div class="flex flex-grow basis-0 gap-5">
			<a href="#"
				><img
					class="w-7 h-7 fill-my-cyan"
					src="/images/icon-facebook.svg"
					alt="Facebook"
				/></a
			>
			<a href="#"
				><img
					class="w-7 h-7 hover:bg-my-cyan"
					src="/images/icon-twitter.svg"
					alt="Twitter"
				/></a
			>
			<a href="#"
				><img
					class="w-7 h-7 hover:bg-my-cyan"
					src="/images/icon-pinterest.svg"
					alt="Pinterest"
				/></a
			>
			<a href="#"
				><img
					class="w-7 h-7 hover:bg-my-cyan"
					src="/images/icon-instagram.svg"
					alt="Instagram"
				/></a
			>
		</div>
	</footer>
</Layout>

<style >
	.form-container,
	.prefooter {
		background-image: url("/images/bg-boost-desktop.svg");
		background-repeat: no-repeat;
		background-position: 75% 84%;
	}

	.form-container {
		background-size: 150%;
	}
</style>
<script>
	import { URL_REGEX } from "../const";
	const code = (await import.meta.env.PUBLIC_URLBAE_LINK) as string;
	const base_url = (await import.meta.env.PUBLIC_URL) as string;

	const $form = document.querySelector('form') as HTMLFormElement
	const $input = document.querySelector("#shortening_btn") as HTMLInputElement;
	const $div_links = document.querySelector("#shorted_links") as HTMLDivElement
	let promiseArray: any = [];

	$form.addEventListener('submit', shortLink)

	async function shortLink(e: Event) {
		const regex = new RegExp(URL_REGEX);

		e.preventDefault();
		if ($input.value.trim() === "" || !regex.test($input.value)) return;
		console.log($input.value.trim())
		const options = {
			method: "POST",
			headers: {
				"Accept": '*/*',
				"Authorization": `Bearer ${code}`,
				"Content-Type": "application/json",
			},
			body: JSON.stringify({
				url: $input.value.trim(),
				domain: "tinyurl.com",
				alias: '',
				description: ''
			}),
		};

		const url = new URL(`${base_url}/create`);

		const res = await fetch(url, options);
		const data = await res.json()
		console.log(data)
		getLinks();
	}



	function getLinks() {
		const options = {
			headers: {
				Accept: "application/json",
				Authorization: `Bearer ${code}`,
				"Content-Type": "application/json",
			},
		};

		const url = new URL(`${base_url}/urls/available`);

		fetch(url, options)
			.then((pr) => pr.json())
			.then((data) => {
				if (data.code !== 0) throw new Error("Error to get links list");
				promiseArray = data.data.map((obj: any) => {
					return new Promise((resolve, reject) => {
						setTimeout(() => {
							fetch(
								`${base_url}/alias/${obj.domain}/${obj.alias}`,
								options,
							)
								.then((response) => {
									if (!response.ok) {
										throw new Error(
											`Error en la solicitud`,
										);
									}
									return response.json();
								})
								.then((data) => {
									// Resuelve la promesa con el resultado del fetch
									resolve(data);
								})
								.catch((error) => {
									// Rechaza la promesa si hay algún error en el fetch
									reject(error);
								});
						}, 1000);
					});
				});
				Promise.all(promiseArray)
					.then((result) => printLinks(result))
					.catch((e) => console.error(e));
			})
			.catch((e) => console.error(e));
	}

	function printLinks(links: any) {
		const $ul = document.createElement("ul");
		$ul.classList.add("flex","flex-col", "gap-4");
		$ul.innerHTML = ''
		console.log('links', links)
		links.map((link: any, i: number) => {
			$ul.innerHTML += `
			<li
            class="flex items-center bg-white justify-between py-2 px-4 rounded"
        >
            <div class="max-w-[300px]">
				<p class="whitespace-nowrap overflow-hidden overflow-ellipsis">${link.data.url}</p></div>
            <div class="flex items-center gap-4">
                
				<input class="text-my-cyan w-[310px] whitespace-nowrap overflow-hidden overflow-ellipsis" type="text" readonly disabled value="${link.data.tiny_url}" id="text_${i}"/>
                <button
                    class="copy bg-my-cyan text-white w-20 text-center py-1.5 rounded-md hover:bg-my-cyan-white"
					data-for="text_${i}"
                    >Copy</button
                >
            </div>
        </li>
		`;
		});
		$div_links.innerHTML = ''
		$div_links?.appendChild($ul)
	}

	document.addEventListener('click', (e: any) => {
		const element = e.target
		if(!Array.from(element.classList).includes('copy')) return
		element.classList.replace('bg-my-cyan', 'bg-my-very-dark-violet')
		element.classList.remove('hover:bg-my-cyan-white')
		const copy_text: HTMLInputElement | null = document.querySelector(`#${element.dataset.for}`)
		copy_text?.select()
		copy_text?.setSelectionRange(0, Infinity)
		navigator.clipboard.writeText(copy_text?.value ?? '')
		element.innerHTML = 'Copied!'
		setTimeout(() => {
			element.classList.replace('bg-my-very-dark-violet', 'bg-my-cyan')
			element.classList.add('hover:bg-my-cyan-white')
			element.innerHTML = 'Copy'
		}, 1000)
	})

	getLinks();
</script>
